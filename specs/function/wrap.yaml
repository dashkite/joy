title: wrap
name: wrap
type: function
summary: Returns a function that returns its argument.
signatures:
  - arguments:
      - name: value
        description: Any JavaScript value.
    returns:
      name: function
      description: An anonymous function that returns `value` when invoked.

description: |
  Named for the mathematical concept of [identity][]. `identity` returns the first argument you provide it, unaltered. This [no operation][] is a fundamental building block of functional composition. Use it as a default, a fallback, or even just as a placeholder for in-progress code.

  !!! Tip
  The return `value` is the arugment `value`. That is, even when passing an object to `identity` the return value is [strictly equal][] to the argument.
  !!!

  [identity]: https://en.wikipedia.org/wiki/Identity_(mathematics)
  [no operation]: https://en.wikipedia.org/wiki/NOP_(code)
  [strictly equal]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Strict_equality


example:
  description: |-
    > You can [read more] about how Joy examples are written.

    [read more]: /concepts/examples

  sections:
    - title: Returns its argument.
      code:
        CoffeeScript: |-
          assert.equal 1,
            _.identity 1
        JavaScript: |-
          assert.equal(1,
            _.identity(1));

    - title: Returns only its first argument.
      code:
        CoffeeScript: |-
          assert.equal 1,
            _.identity 1, 2, 3
        JavaScript: |-
          assert.equal(1,
            _.identity(1, 2, 3));

    - title: Returns the exact argument. Even objects are strictly equal.
      code:
        CoffeeScript: |-
          a = company: "Delos"

          assert.equal a,
            _.identity a
        JavaScript: |-
          const a = { company: "Delos" };

          assert.equal(a,
            _.identity(a));
