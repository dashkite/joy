name: project
type: function
summary: >-
  Returns the value of the property matching the given _property_ for each product from _iterable_. That is, it is the composition of [`get`][get] with [`map`][map].

  Like most Joy functions, `project` is curryable, so `project` can be used like Ramda's [`pluck`][ramda].

  However, because `project` relies on `map`, `project` is suitable for both synchronous and asynchronous iterables. Note that `project` uses Array::map when specifically passed an array.

  [get]: https://dashkite.github.io/joy/reference/object/get/
  [map]: https://dashkite.github.io/joy/reference/iterable/map/
  [ramda]: https://ramdajs.com/docs/#pluck


  Projects
signatures:
  - arguments:
      - name: property
        type: String
        description: The name of the object property to project from each product.
      - name: iterable
        type: Iterable
        description: The iterable from which to consume products.
    returns:
      name: generator
      type: Generator
      description: Generates the value of the _property_ from each product from _iterable_ with a synchronicity matching _iterable_.
  - arguments:
      - name: property
        type: String
        description: The name of the object property to project from each item.
      - name: array
        type: Array
        description: The array from which to consume items.
    returns:
      name: array
      type: Array
      description: Lists the value of the _property_ from each item in _array_.
